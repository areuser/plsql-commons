#summary Template engine, separating business logic and presentation

= Template Engine PL/SQL style =

_What is it all about?_

Template engine are designed to separate program logic and presentation into two independent parts. This makes the development of both logic and presentation easier, improves flexibility and eases modification and maintenance.  

_How to?_

Template engine depence on other packages, for example you need to read a template file from operating system and therefore it requires PLSQL_FILE.
 
{{{ 
declare 
     lTemplate StringList := StringList ();
     lContext StringList := StringList ();
     lOutput StringList := StringList (); 
     tplName type.string := 'HelloWorld';
begin
     plsql_log.switchOn;
     lTemplate := plsql_gen.getTemplate (tplName);
     plsql_log.debug(pUtil.join (lTemplate)); 
     lContext := plsql_gen.addContext (lContext, 'value2', 'Dimitri Lambrou');   
     lContext := plsql_gen.addContext (lContext, 'value1', 'World');  
     lOutput  := plsql_gen.merge (lContext, lTemplate); 
     plsql_log.debug(pUtil.join (lOutput)); 
     plsql_file.putLines ('output.tpl', 'TEMPLATE', lOutput, plsql_file.WE8ISO8859P1); 
end;  
}}} 

input:

{{{Hello %value1%, this is the %value1% according to %value2%.}}}

output:

{{{Hello World, this is the World according to Dimitri Lambrou.}}}